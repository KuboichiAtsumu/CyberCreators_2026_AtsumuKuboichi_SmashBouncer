//==============================================================================================================================================
//
// PUSHに関する処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "push.h"//PUSH UI

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CPush::CPush(int nPriority) : CObject3D(nPriority)
{
	//メンバ変数初期化
	m_state = STAND_BY;//状態
	m_bLightUp = false;//ライトアップフラグ
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CPush::~CPush()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CPush::Init()
{
	//パラメータ設定
	SetPos(POS);//位置
	SetRot(ROT);//角度
	SetSize(SIZE);//サイズ

	//テクスチャ生成
	CTexture* pTex = CManager::GetTexture();//取得
	int nTextureIdx = pTex->Regist(TEXTURE_FILE);//登録
	BindTexture(pTex->GetAddress(nTextureIdx));//設定
	SetTextureIdx(nTextureIdx);//ID設定

	//3Dオブジェクト初期化処理
	if (FAILED(CObject3D::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CPush::Uninit()
{
	//3Dオブジェクト終了処理
	CObject3D::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CPush::Update()
{
	//ローカル変数宣言
	D3DXCOLOR color = GetColor();//カラー情報

	//状態別処理
	switch (m_state)
	{
		//待機中
	case STAND_BY:
		//明るくなっている場合
		if (m_bLightUp)
		{
			color.a += STAND_SPEED;
		}
		//暗くなっている場合
		else
		{
			color.a -= STAND_SPEED;
		}
		break;

		//点滅中
	case BLINKING:
		//明るくなっている場合
		if (m_bLightUp)
		{
			color.a = 1.0f;
		}
		//暗くなっている場合
		else
		{
			color.a = 0.0f;
		}
		break;

	default:
		break;
	}

	//カラーのα値が最大・最小値に達した場合
	if (color.a <= 0.0f || color.a >= 1.0f)
	{
		//ライトアップフラグを切り替える
		m_bLightUp = m_bLightUp ? false : true;
	}

	//Enterキーが押された場合
	//Aボタンが押された場合
	if (CManager::GetKeyboard()->GetTrigger(DIK_RETURN)
		|| CManager::GetJoypad()->GetTrigger(CInputJoypad::JOYKEY_A))
	{
		//点滅状態にする
		m_state = BLINKING;
	}

	//更新情報設定
	SetColor(color);//カラー情報

	//3Dオブジェクト更新処理
	CObject3D::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CPush::Draw()
{
	//3Dオブジェクト描画処理
	CObject3D::Draw();
}

//===========================================================================================================
// 生成処理
//===========================================================================================================
CPush* CPush::Create()
{
	//メモリを動的確保
	CPush* pPush = NEW CPush(4);

	//パラメータ設定
	pPush->SetType(CObject::UI);//オブジェクトタイプ

	//初期化処理
	pPush->Init();

	return pPush;
}
