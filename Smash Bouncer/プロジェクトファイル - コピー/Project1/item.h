//==============================================================================================================================================
//
// アイテムに関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _ITEM_H_
#define _ITEM_H_

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "objectX.h"

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CItem : public CObjectX
{
public:
	//======================================
	// 列挙型定義
	//======================================

	//タイプ
	typedef enum
	{
		HEART,//ハート
		BONUS,//ボーナス
		MAX
	}ITEMTYPE;

	//======================================
	// 関数
	//======================================
	CItem(int nPriority = 3);//コンストラクタ
	~CItem() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	static CItem* Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, int nType);//生成処理
	virtual bool Collision(D3DXVECTOR3 pos, D3DXVECTOR3 size, int& nLife);//当たり判定
	CItem* GetPrevItem() { return m_pPrev; }//前のオブジェクト情報の取得
	CItem* GetNextItem() { return m_pNext; }//次のオブジェクト情報の取得
	void SetPrevItem(CItem* pItem) { m_pPrev = pItem; }//前のオブジェクト情報を設定
	void SetNextItem(CItem* pItem) { m_pNext = pItem; }//次のオブジェクト情報を設定

private:
	//======================================
	// 関数
	//======================================
	void SetItemType(ITEMTYPE type) { m_ItemType = type; }//タイプ設定
	
	//======================================
	// 変数
	//======================================
	ITEMTYPE m_ItemType;//種類
	static constexpr float TURN = 0.02f;//回転速度
	CItem* m_pPrev;//前のオブジェクトのポインタ
	CItem* m_pNext;//次のオブジェクトのポインタ
};

#endif

