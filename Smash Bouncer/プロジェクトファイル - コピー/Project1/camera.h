#pragma once
//==============================================================================================================================================
//
// カメラに関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _CAMERA_H_ //このマクロ定義がされなかったら
#define _CAMERA_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "main.h"//メイン

//===========================================================================================================
// 前方宣言
//===========================================================================================================
class CObject;//オブジェクト

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CCamera
{
public:
	//======================================
	// 関数
	//======================================
	CCamera();//コンストラクタ
	~CCamera();//デストラクタ
	HRESULT Init();//初期化処理
	void Uninit();//終了処理
	void Update();//更新処理
	void Move();//移動処理
	void SetCamera();//カメラの設定

	//情報の設定
	void SetPosV(D3DXVECTOR3 pos) { m_posV = pos; }//視点
	void SetPosR(D3DXVECTOR3 pos) { m_posR = pos; }//注視点
	void SetShake(int nFrame, int nShake) //揺れの情報
	{
		m_nShakeFrame = nFrame;//揺れるフレーム数
		m_nMaxNumShake = nShake;//振れの量
	}
	void Reset()//視点と注視点のリセット
	{
		m_posV = FirstPosV;//視点
		m_posR = { 0.0f,0.0f,0.0f };//注視点
	}

	//情報の取得
	D3DXVECTOR3 GetRot() { return m_rot; }//角度
	D3DXVECTOR3 GetPosR() { return m_posR; }//注視点の座標

	//======================================
	// 変数
	//======================================
	static inline const D3DXVECTOR3 FirstPosV = { 0.0f, 350.0f, -200.0f };

private:
	//======================================
	// 関数
	//======================================
	void SetPlayerPos(CObject* pObj);//プレイヤーの位置を参照した視点・注視点設定
	void SetZonePos(CObject* pObj);//ゾーンの位置を参照した視点・注視点設定

	//======================================
	// 変数
	//======================================
	const float ADJUST_POS_SPEED = 10.0f;//カメラ位置調整速度
	const float MAX_ROLL = 0.05f;//回転速度
	const float MAX_SPEED = 10.0f;//移動速度
	D3DXVECTOR3 m_posV;//視点
	D3DXVECTOR3 m_posR;//注視点
	D3DXVECTOR3 m_vecU;//上方向
	D3DXVECTOR3 m_rot;//向き
	D3DXVECTOR3 m_move;//移動量
	D3DXMATRIX m_mtxProjection;//プロジェクション行列
	D3DXMATRIX m_mtxView;//ビュー行列
	int m_nShakeFrame;//揺れるフレーム数
	int m_nMaxNumShake;//揺れの量の最大値
	float m_fLength;//距離
};

#endif
