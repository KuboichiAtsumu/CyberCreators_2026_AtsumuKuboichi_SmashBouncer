#pragma once
//==============================================================================================================================================
//
// 砲台に関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _BATTERY_H_ //このマクロ定義がされなかったら
#define _BATTERY_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "BLOCK.h"//ブロックヘッダー

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CBattery : public CBlock
{
public:
	//======================================
	// 関数
	//======================================
	CBattery(int nPriority = 3);//コンストラクタ
	~CBattery() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	void Collision(D3DXVECTOR3& pos, D3DXVECTOR3& oldpos, D3DXVECTOR3& size) override;//当たり判定
	void SetInterval() { m_nIntervalShot = rand() % DIFFERENCE_INTERVAL + MIN_INTERVAL; }//発射時間設定処理

private:
	//======================================
	// 変数
	//======================================
	static constexpr int MIN_INTERVAL = 2;//発射時間最短時間
	static constexpr int DIFFERENCE_INTERVAL = 3;//発射時間の範囲
	int m_nIntervalShot;//弾の発射間隔
	int m_nCntShot;//弾発射までのカウント
};

#endif
