//==============================================================================================================================================
//
// ステージ境界ブロックに関する処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "boundary.h"//ステージ境界ブロックヘッダー

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CBoundary::CBoundary(int nPriority) : CBlock(nPriority)
{
	//メンバ変数初期化
	m_bUse = true;//使用フラグ
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CBoundary::~CBoundary()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CBoundary::Init()
{
	//ブロック初期化処理
	if (FAILED(CBlock::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CBoundary::Uninit()
{
	//ブロック終了処理
	CBlock::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CBoundary::Update()
{
	//エディタモードの場合
	if (CManager::GetScene()->GetEditMode())
	{//描画せずに処理を抜ける
		return;
	}

	//ゲームの状態が移動中の場合
	//ブロックのステージIDと現在のステージが一致する場合
	if (CGame::GetGameState() == CGame::STATE_MOVE
		&& GetPostStageID() == CGame::GetNumStage())
	{
		//使用しない
		m_bUse = false;
	}
	else
	{
		//使用する
		m_bUse = true;
	}

	//ブロック更新処理
	CBlock::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CBoundary::Draw()
{
	//エディタモードの場合
	if (CManager::GetScene()->GetEditMode())
	{//描画せずに処理を抜ける
		return;
	}

	//使用していない場合
	if (!m_bUse)
	{//描画せずに処理を抜ける
		return;
	}

	//ブロック描画処理
	CBlock::Draw();
}

//===========================================================================================================
// 当たり判定
//===========================================================================================================
void CBoundary::Collision(D3DXVECTOR3& pos, D3DXVECTOR3& oldpos, D3DXVECTOR3& size)
{
	//使用していない場合　　
	if (!m_bUse)
	{//判定せずに処理を抜ける
		return;
	}

	//ブロックの当たり判定
	CBlock::Collision(pos, oldpos, size);
}