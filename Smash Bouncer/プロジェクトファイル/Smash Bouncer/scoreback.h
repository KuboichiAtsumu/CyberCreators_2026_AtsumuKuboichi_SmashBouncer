#pragma once
//==============================================================================================================================================
//
// スコア表示背景に関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _SCOREBACK_H_ //このマクロ定義がされなかったら
#define _SCOREBACK_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "object2D.h"//2Dオブジェクト

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CScoreBack : public CObject2D
{
public:
	//======================================
	// 関数
	//======================================
	CScoreBack(int nPriority = 4);//コンストラクタ
	~CScoreBack() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	static CScoreBack* Create();//生成処理

private:
	//======================================
	// 列挙型定義
	//======================================

	//状態
	typedef enum
	{
		NONE = 0,
		SCALE,//拡大中
		MAX
	}SCOREBACK_STATE;

	//======================================
	// 変数
	//======================================
	const D3DXVECTOR2 POS = { CProcess::SCREEN_WIDTH * 0.5f, 400.0f };//位置
	const D3DXVECTOR2 SIZE = { CProcess::SCREEN_WIDTH, 0.0f };//サイズ(初期値)
	const float TARGET_HEIGHT = 400.0f;//拡大されるサイズ
	const float SCLAING_SPEED = 20.0f;//拡大速度
	SCOREBACK_STATE m_state;//状態
};

#endif
