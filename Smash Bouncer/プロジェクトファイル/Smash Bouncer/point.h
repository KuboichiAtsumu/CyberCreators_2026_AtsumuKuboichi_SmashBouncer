//==============================================================================================================================================
//
// 障害物に関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _POINT_H_ //このマクロ定義がされなかったら
#define _POINT_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "objectX.h"//メイン処理

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CPoint : public CObjectX
{
public:
	//======================================
	// 関数
	//======================================
	CPoint(int nPriority = 3);//コンストラクタ
	~CPoint() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	static CPoint* Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot);//生成処理
	
	//情報の取得
	CPoint* GetPrevPoint() { return m_pPrev; }//前のオブジェクト情報
	CPoint* GetNextPoint() { return m_pNext; }//次のオブジェクト情報

	//情報の設定
	void SetPrevPoint(CPoint* pPoint) { m_pPrev = pPoint; }//前のオブジェクト情報
	void SetNextPoint(CPoint* pPoint) { m_pNext = pPoint; }//次のオブジェクト情報

private:
	//======================================
	// 変数
	//======================================
	CPoint* m_pPrev;//前のオブジェクトのポインタ
	CPoint* m_pNext;//次のオブジェクトのポインタ
};

#endif
