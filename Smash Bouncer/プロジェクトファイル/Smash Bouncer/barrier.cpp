//==============================================================================================================================================
//
// バリアブロックに関する処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "barrier.h"//バリアブロックヘッダー

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CBarrier::CBarrier(int nPriority) : CBlock(nPriority)
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CBarrier::~CBarrier()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CBarrier::Init()
{
	//ブロック初期化処理
	if (FAILED(CBlock::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CBarrier::Uninit()
{
	//ブロック終了処理
	CBlock::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CBarrier::Update()
{
	//エディタモードの場合
	if (CManager::GetScene()->GetEditMode())
	{//描画せずに処理を抜ける
		return;
	}

	//ブロック更新処理
	CBlock::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CBarrier::Draw()
{
	//エディタモードの場合
	if (CManager::GetScene()->GetEditMode())
	{//描画せずに処理を抜ける
		return;
	}

	//ブロック描画処理
	CBlock::Draw();
}

//===========================================================================================================
// 当たり判定
//===========================================================================================================
void CBarrier::Collision(D3DXVECTOR3& pos, D3DXVECTOR3& oldpos, D3DXVECTOR3& size)
{
	//ブロックの当たり判定
	CBlock::Collision(pos, oldpos, size);
}