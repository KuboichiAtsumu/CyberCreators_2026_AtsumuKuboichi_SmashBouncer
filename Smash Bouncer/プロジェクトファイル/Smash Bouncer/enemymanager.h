#pragma once
//==============================================================================================================================================
//
// エネミーマネージャーに関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _ENEMYMANAGER_H_ //このマクロ定義がされなかったら
#define _ENEMYMANAGER_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "objectmanager.h"//オブジェクトマネージャー
#include "enemy.h"//エネミー

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CEnemyManager : public CObjectManager
{
public:
	//======================================
	// 関数
	//======================================
	CEnemyManager(int nPriority = 97);//コンストラクタ
	~CEnemyManager() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	bool Collision(D3DXVECTOR3& pos, D3DXVECTOR3& size);//当たり判定
	void Regist(CEnemy* pEnemy);//登録処理

private:
	//======================================
	// 変数
	//======================================
	CEnemy* m_pTop;//先頭オブジェクトのポインタ
	CEnemy* m_pCur;//終端オブジェクトのポインタ
};

#endif
