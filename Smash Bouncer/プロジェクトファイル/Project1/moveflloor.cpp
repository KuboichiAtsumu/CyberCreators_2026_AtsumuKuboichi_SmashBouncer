//==============================================================================================================================================
//
// 移動床の処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "movefloor.h"//移動床

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CMoveFloor::CMoveFloor(int nPriority) : CGimmick(nPriority)
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CMoveFloor::~CMoveFloor()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CMoveFloor::Init()
{
	//ギミック初期化処理
	if (FAILED(CGimmick::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CMoveFloor::Uninit()
{
	//ギミック終了処理
	CGimmick::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CMoveFloor::Update()
{
	//ギミック更新処理
	CGimmick::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CMoveFloor::Draw()
{
	//エディタモードの場合
	if (CManager::GetScene()->GetEditMode())
	{//描画せずに処理を抜ける
		return;
	}

	//ギミック描画処理
	CGimmick::Draw();
}

//===========================================================================================================
// 移動床の当たり判定
//===========================================================================================================
bool CMoveFloor::Collision(D3DXVECTOR3& pos, D3DXVECTOR3& move, D3DXVECTOR3 size, D3DXVECTOR3& rot)
{
	//ローカル変数宣言
	bool bCollision = false;//当たり判定の結果

	//当たり判定結果を取得
	bCollision = CGimmick::Collision(pos, move, size, rot);

	//当たり判定がtrueの場合
	if (bCollision)
	{
		//移動床の方向にバレットを回転
		rot = GetRot();

		//向きに合わせてバレットの移動量を更新
		move = { sinf(rot.y + D3DX_PI) * 4.0f, 0.0f, cosf(rot.y + D3DX_PI) * 4.0f };
	}

	return bCollision;
}
