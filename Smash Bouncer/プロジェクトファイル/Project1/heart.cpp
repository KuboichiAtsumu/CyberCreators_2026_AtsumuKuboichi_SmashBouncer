//==============================================================================================================================================
//
// ハートアイテムの処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "heart.h"//ハート

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CHeart::CHeart(int nPriority) : CItem(nPriority)
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CHeart::~CHeart()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CHeart::Init()
{
	//アイテム初期化処理
	if (FAILED(CItem::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CHeart::Uninit()
{
	//アイテム終了処理
	CItem::Uninit();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CHeart::Update()
{
	//アイテム更新処理
	CItem::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CHeart::Draw()
{
	//エディタモードの場合
	if (CManager::GetScene()->GetEditMode())
	{//描画せずに処理を抜ける
		return;
	}

	//アイテム描画処理
	CItem::Draw();
}

//===========================================================================================================
// 当たり判定
//===========================================================================================================
bool CHeart::Collision(D3DXVECTOR3 pos, D3DXVECTOR3 size, int& nLife)
{
	//ローカル変数宣言
	bool bCollision = false;//当たり判定の結果

	//当たり判定結果を取得
	bCollision = CItem::Collision(pos, size, nLife);

	//当たり判定がtrueの場合
	if (bCollision)
	{
		//ライフを加算する
		nLife += ADD_LIFE;

		//終了処理
		Uninit();
	}

	//当たり判定の結果を返す
	return bCollision;
}
