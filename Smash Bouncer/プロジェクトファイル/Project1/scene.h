//==============================================================================================================================================
//
// シーンに関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _SCENE_H_ //このマクロ定義がされなかったら
#define _SCENE_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "main.h"//メイン

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CScene
{
public:
	//======================================
	// 列挙型定義
	//======================================
	typedef enum
	{
		MODE_NONE = 0,
		MODE_TITLE,//タイトル
		MODE_TUTORIAL,//チュートリアル
		MODE_GAME,//ゲーム
		MODE_RESULT,//リザルト
		MODE_RANKING,//ランキング
		MODE_MAX
	}MODE;

	//======================================
	// 関数
	//======================================
	CScene();//コンストラクタ
	virtual ~CScene();//デストラクタ
	virtual HRESULT Init();//初期化処理
	virtual void Uninit();//終了処理
	virtual void Update();//更新処理
	virtual void Draw();//描画処理
	static CScene* Create(MODE mode);//生成処理

	//情報の取得
	MODE GetMode() { return m_mode; }//現在のモード
	bool GetEditMode() { return m_bEdit; }//エディタモードフラグ
	
	//情報の設定
	void SetMode(MODE mode) { m_mode = mode; }//モード
	void SetEditMode(bool bEdit) { m_bEdit = bEdit; }//エディタモードフラグ

private:
	//======================================
	// 変数
	//======================================
	static MODE m_mode;//モード
	bool m_bEdit;//エディタモードフラグ
};

#endif
