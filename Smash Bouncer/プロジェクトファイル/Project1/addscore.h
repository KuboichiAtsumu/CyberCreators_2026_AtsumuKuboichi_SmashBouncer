#pragma once
//==============================================================================================================================================
//
// 加算スコア表示に関する処理のヘッダーファイル
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================
#ifndef _ADDSCORE_H_ //このマクロ定義がされなかったら
#define _ADDSCORE_H_ //2重インクルード防止のマクロ定義

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "billboard.h"//ビルボード

//===========================================================================================================
// クラス定義
//===========================================================================================================
class CAddScore : public CBillboard
{
public:
	//======================================
	// 関数
	//======================================
	CAddScore(int nPriority);//コンストラクタ
	~CAddScore() override;//デストラクタ
	HRESULT Init() override;//初期化処理
	void Uninit() override;//終了処理
	void Update() override;//更新処理
	void Draw() override;//描画処理
	static CAddScore* Create(int nIdx, D3DXVECTOR3 pos, D3DXVECTOR3 size, int nAddScore);//生成処理

private:
	//======================================
	// 関数
	//======================================
	void Move();//移動処理
	void SetIndex(int nIdx) { m_nIdx = nIdx; }//ID
	void SetAddScore(int nAddScore) { m_nAddScore = nAddScore; }//加算されたスコアの値
	void SetPos(D3DXVECTOR3 pos);//位置
	void UpdateVtx();//頂点情報更新処理

	//======================================
	// 変数
	//======================================
	static const int MAX_NUMBER = 4;//表示数
	const float COLOR_ASCENT = 0.05f;//カラー変動速度
	const float UP_SPEED = 0.3f;//上昇速度
	int m_nAddScore;//加算されたスコア
	int m_nIdx;//ID
	bool m_bLightUp;//ライトアップフラグ
};

#endif